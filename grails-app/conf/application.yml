---
grails:
    profile: web
    codegen:
        defaultPackage: samltest
    gorm:
        reactor:
            # Whether to translate GORM events into Reactor events
            # Disabled by default for performance reasons
            events: false
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false

# Spring Actuator Endpoints are Disabled by Default
endpoints:
    enabled: false
    jmx:
        enabled: true

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
endpoints:
    jmx:
        unique-names: true

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: false
        use_query_cache: false
dataSource:
    pooled: true
    jmxExport: true
    driverClassName: org.h2.Driver
    username: sa
    password: ''

environments:
    development:
        dataSource:
            dbCreate: create-drop
            url: jdbc:h2:mem:devDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    test:
        dataSource:
            dbCreate: update
            url: jdbc:h2:mem:testDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    production:
        dataSource:
            dbCreate: none
            url: jdbc:h2:./prodDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED

---
grails:
  plugin:
    springsecurity:
      providerNames: ['samlAuthenticationProvider', 'anonymousAuthenticationProvider']
      userLookup:
        userDomainClassName: samltest.UserAcct
        authorityJoinClassName: samltest.UserAcctRole
      authority:
        className: samltest.Role
      controllerAnnotations:
        staticRules:
        - { pattern: '/',               access: authenticated }
        - { pattern: '/error',          access: permitAll }
        - { pattern: '/index',          access: authenticated }
        - { pattern: '/index.gsp',      access: authenticated }
        - { pattern: '/assets/**',      access: permitAll }
        - { pattern: '/**/js/**',       access: permitAll }
        - { pattern: '/**/css/**',      access: permitAll }
        - { pattern: '/**/images/**',   access: permitAll }
        - { pattern: '/**/favicon.ico', access: permitAll }
      filterChain:
        chainMap:
        - { pattern: '/assets/**',      filters: 'none' }
        - { pattern: '/**/js/**',       filters: 'none' }
        - { pattern: '/**/css/**',      filters: 'none' }
        - { pattern: '/**/images/**',   filters: 'none' }
        - { pattern: '/**/favicon.ico', filters: 'none' }
        - { pattern: '/**',             filters: 'JOINED_FILTERS' }

      saml:
        active: true
        afterLoginUrl: 'http://localhost:8080/'
        afterLogoutUrl: 'http://localhost:8080/'
        responseSkew: 300
        signatureAlgorithm: 'rsa-sha256'
        digestAlgorithm: 'sha256'
        userGroupAttribute: 'memberOf' # ???
        userGroupToRoleMapping:
            ROLE_MY_APP_ROLE: 'CN=MYSAMLGROUP, OU=MyAppGroups, DC=myldap, DC=example, DC=com'
        autoCreate:
            active: false # We won't create user, if they're in the IdP but not Unbox, they should not have access
            key: 'id'
            assignAuthorities: false
        metadata:
          providers:
            ping: 'security/idp-local.xml'
          defaultIdp: 'ping'
          url: '/saml/metadata'
          sp:
            file: 'security/sp.xml'
            defaults:
              local: true
              entityId: 'http://test.com'
              alias: 'test'
              securityProfile: 'pkix'
              signingKey: 'ping'
              encryptionKey: 'ping'
              tlsKey: 'ping'
              requireArtifactResolveSigned: false
              requireLogoutRequestSigned: false
              requireLogoutResponseSigned: false
        keyManager:
          storeFile: "classpath:security/keystore.jks"
          storePass: 'nalle123'
          passwords:
            ping: 'ping123'
          defaultKey: 'ping'
